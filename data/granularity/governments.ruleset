
; Modifying this file:
; You should not modify this file except to make bugfixes or
; for other "maintenance". If you want to make custom changes
; you should create a new datadir subdirectory and copy this file
; into that directory, and then modify that copy. Then use the
; command "rulesetdir <mysubdir>" in the server to have freeciv
; use your new customized file.

; Note that the freeciv AI may not cope well with anything more
; than minor changes.

[datafile]
description = "Granularity governments data for Freeciv"
options = "+Freeciv-ruleset-3.4-Devel-2025.Jan.17"
format_version = 50

[governments]
during_revolution = "Anarchy"

; /* <-- avoid gettext warnings
;
; Below: The individual government types, one per section.
;
; The actual tag used (the * in [government_*]) does not matter, except
; it must be unique within this file, and it may be used in debug
; output when reading this file.
;
; For the "official" rulesets, the order of these sections should not
; be changed because that would break backward compatibility with
; savegames. (In particular, if Fundamentalism is added to default
; ruleset, should be added at end.)
;
; Notes on fields:
;
; name         = translatable name as seen by user
; rule_name    = (optional) internal name for savegames, rulesets etc; if
;                not present, "name" is used for this purpose too. Since
;                the name used in savegames must not change, if you want
;                to rename an item after a ruleset has been released, you
;                should set "rule_name" to the original value of "name".
; reqs         = requirements for this government (see README.effects)
; graphic      = tag specifying preferred graphic
; graphic_alt  = alternate graphics tag if preferred is not found;
;                should be a standard tag if preferred is not;
;                otherwise may be "-"
; sound        = Sound tag for the audio to play when player switch
;                to government.
; sound_alt    = Alternative sound tag, in case primary one is not found.
; sound_alt2   = Second alternative sound tag, in case neither primary tag
;                nor the first alt tag is found.
; ai_better    = AI will not consider this government for use if the
;                government listed here is available
; ruler_male_title   = The default male ruler title for the government type.
;                      It's a format string where name of the ruler is marked
;                      by '%s'.
;                      Individual nations may override this by their
;                      own title.
; ruler_female_title = The default female ruler title for the government type.
;                      See above ruler_male_title.
; helptext     = optional help text string; should escape all raw newlines
;                so that xgettext parsing works
;
; */ <-- avoid gettext warnings

;------------------------------------------------------------------------
[government_anarchy]

name        = _("Anarchy")
; No reqs
graphic     = "gov.anarchy"
graphic_alt = "-"
sound       = "g_anarchy"
sound_alt   = "-"
sound_alt2  = "-"

ruler_male_title = _("Usurper %s")
ruler_female_title = _("?female:Usurper %s")

helptext = _("\
Anarchy happens between government changes. \
No new cities can be acquired during anarchy.\
")

;------------------------------------------------------------------------
[government_tribal]

name        = _("Tribal")
reqs =
   { "type", "name", "range"
; No requirements
   }
graphic     = "gov.tribal"
graphic_alt = "-"
sound       = "g_tribal"
sound_alt   = "g_generic"
sound_alt2  = "-"

ruler_male_title = _("Warlord %s")
ruler_female_title = _("Warlady %s")

helptext = _("\
The initial form of government. \
Under tribalism the maximum nation size is five cities.\
")

;------------------------------------------------------------------------
[government_despotism]

name        = _("Despotism")
reqs =
   { "type", "name",       "range"
     "Tech", "Government", "Player"
   }
graphic     = "gov.despotism"
graphic_alt = "-"
sound       = "g_despotism"
sound_alt   = "g_generic"
sound_alt2  = "-"

ruler_male_title = _("Chief %s")
ruler_female_title = _("?female:Chief %s")

helptext = _("\
Compared to tribalism, despotism gives some more power to the leader. \
It's possible acquire up to ten cities.\
")

;------------------------------------------------------------------------
[government_monarchy]

name        = _("Monarchy")
reqs =
   { "type", "name",     "range"
     "Tech", "Monarchy", "Player"
   }
graphic     = "gov.monarchy"
graphic_alt = "-"
sound       = "g_monarchy"
sound_alt   = "g_generic"
sound_alt2  = "-"

ruler_male_title = _("King %s")
ruler_female_title = _("?female:Queen %s")

helptext = _("\
It's possible to acquire more than ten cities.\
")

; /* <-- avoid gettext warnings
;
; Multipliers (aka policies)
;
; name                    = translatable name as seen by user
; rule_name               = (optional) internal name for savegames, rulesets
;                           etc; if not present, "name" is used for this
;                           purpose too. Since the name used in savegames must
;                           not change, if you want to rename an item after a
;                           ruleset has been released, you should set
;                           "rule_name" to the original value of "name".
; default                 = default value (as presented in UI)
; start                   = minimum value (as presented in UI)
; stop                    = maximum value (as presented in UI)
; step                    = minimum increase/decrease (as presented in UI)
; offset                  = offset/factor control how UI values are turned
; factor                  = into effect values for use in effects.ruleset.
;                           effect_value = (ui_value + offset) * (factor/100)
;                           Optional; by default offset=0, factor=100, so
;                           that UI values are used as-is.
; minimum_turns           = how often multiplier can be changed, or: how long one is stuck
;                           with the given value after changing to it
; reqs                    = requirements for adjusting this policy (see README.effects)
; helptext                = optional help text string; should escape all raw
;                           newlines so that xgettext parsing works
;
; */ <-- avoid gettext warnings

[multiplier_farming_time]
name          = _("Farming Time")
start         = 0
stop          = 5
step          = 1
default       = 0
; /* xgettext:no-c-format */
helptext      = _("\
People take time from the production work to the farming work. \
Each step increases food output by 10%, and reduces shields output by 10%.\
")

[multiplier_offensive_strategies]
name          = _("Offensive Strategies")
start         = 0
stop          = 5
step          = 1
default       = 0
minimum_turns = 5
reqs          =
   { "type", "name",       "range"
     "Tech", "Strategies", "Player"
   }
; /* xgettext:no-c-format */
helptext      = _("\
Gear your military training, and whole nation, towards offensive strategies, \
at the cost of defensive ones. Each step gives +5% bonus for attack, and \
-5% penalty for defense. Once the policy has been set, it cannot be changed \
again before five turns has passed - it takes time to align entire nation \
with such decisions.\
")
